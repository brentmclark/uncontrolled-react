{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["defaultConfig","validationErrorClass","parentErrorClass","errorElementTagName","inputElementSelector","config","React","finalConfig","Object","inputs","document","console","insertError","options","parent","input","error","checkValidity","isDirty","setisDirty","e","rest","event","formData","FormData","fieldData","onSubmit","App","props","firstName","lastName","email","phoneNumber","alert","formIsDirty","className","type","name","required","pattern","style","marginLeft","color","fontWeight","ReactDOM","render","getElementById"],"mappings":"sNAEMA,EAAgB,CACpBC,qBADoB,mBAEpBC,iBAFoB,uBAGpBC,oBAHoB,MAIpBC,qBAAsB,2B,MAGT,SAAiBC,GAAQ,MACRC,cAA9B,GADsC,mBAChC,EADgC,KAChC,EADgC,KA4FtC,OA1FiBA,WAAjB,MAEAA,eAAgB,WACd,IAAMC,EAAcC,mBAApB,GACM,EAAN,EAAM,uBAAN,EAAM,mBAAN,EAAM,oBAIJJ,EAJF,EAIEA,qBAEIK,EAASC,0BAAf,GACAC,YAAY,UAAUP,yBAmDtB,OA3CAK,WAAe,YACb,cACE,IAAMG,EAAcC,EAApB,YACMC,EAASC,EAAf,WACMC,EACJF,gCACAJ,uBAFF,IAIKK,WAAD,OAAyBA,EAA7B,mBACEC,cACAA,cAAoBD,EAApBC,kBAEA,IACEF,mBACAA,sBAGFA,sBACAE,YAqBJD,4BAjBA,WAGEE,EAAc,CAAEL,aAAa,KA9B/B,IAAIM,GACFC,SA4CFJ,8BATA,YAEEK,mBAGAH,EAAc,CAAEL,aAAa,UAO1B,WACLH,WAAeM,YACbA,2CACAA,qDA/DNT,IAwFO,MApBP,YAA+C,IAAjC,EAAiC,EAAjC,WAAiC,EAAjC,SAAyBe,EAAQ,uCAC7C,OACE,sDAEYC,YACRA,mBACAX,6BACA,IAHiB,EAGXY,EAAW,IAAIC,SAASF,EAA9B,QACMG,EAAN,GAJiB,cAKUF,EAA3B,WALiB,IAKjB,2BAA+C,8BAApC,EAAoC,KAA/C,EAA+C,KAC7CE,QANe,8BAQjBC,GAAYA,EAAS,oBAAmBD,iBAX9C,IAmBaP,YChDFS,EAhDH,SAAAC,GAYV,OACE,kBAAC,EAAD,CAAMF,SAZR,YAAkC,IAAdD,EAAa,EAAbA,UACVI,EAA4CJ,EAA5CI,UAAWC,EAAiCL,EAAjCK,SAAUC,EAAuBN,EAAvBM,MAAOC,EAAgBP,EAAhBO,YACpCC,MAAM,mBAAD,OAEOJ,EAFP,YAEoBC,EAFpB,oEAG2CC,EAH3C,2BAGmEC,EAHnE,sCAWF,gBAAGE,EAAH,EAAGA,YAAH,OACC,oCACE,yBAAKC,UAAU,SACb,6CACA,2BAAOC,KAAK,OAAOC,KAAK,YAAYC,UAAQ,KAE9C,yBAAKH,UAAU,SACb,4CACA,2BAAOC,KAAK,OAAOC,KAAK,WAAWC,UAAQ,KAE7C,yBAAKH,UAAU,SACb,gDACA,2BAAOC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,KAE3C,yBAAKH,UAAU,SACb,+CACA,2BAAOC,KAAK,MAAMC,KAAK,cAAcC,UAAQ,EAACC,QAAQ,aAExD,6BACE,4BAAQH,KAAK,UAAb,eACCF,GACC,0BACEM,MAAO,CAAEC,WAAY,OAAQC,MAAO,MAAOC,WAAY,MADzD,2BClCdC,IAASC,OAAO,kBAAC,EAAD,MAASnC,SAASoC,eAAe,U","file":"static/js/main.c76f95fa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst defaultConfig = {\n  validationErrorClass: \"validation-error\",\n  parentErrorClass: \"has-validation-error\",\n  errorElementTagName: \"div\",\n  inputElementSelector: \"input, select, textarea\"\n};\n\nexport default function useForm(config) {\n  const [isDirty, setisDirty] = React.useState(false);\n  const formElem = React.useRef(null);\n\n  React.useEffect(() => {\n    const finalConfig = Object.assign({}, defaultConfig, config);\n    const {\n      validationErrorClass,\n      parentErrorClass,\n      errorElementTagName,\n      inputElementSelector\n    } = finalConfig;\n    const inputs = document.querySelectorAll(inputElementSelector);\n    console.log({ inputs, inputElementSelector });\n\n    const setFormToDirty = () => {\n      if (isDirty === false) {\n        setisDirty(true);\n      }\n    };\n\n    inputs.forEach(function(input) {\n      function checkValidity(options) {\n        const insertError = options.insertError;\n        const parent = input.parentNode;\n        const error =\n          parent.querySelector(`.${validationErrorClass}`) ||\n          document.createElement(errorElementTagName);\n\n        if (!input.validity.valid && input.validationMessage) {\n          error.className = validationErrorClass;\n          error.textContent = input.validationMessage;\n\n          if (insertError) {\n            parent.appendChild(error, input);\n            parent.classList.add(parentErrorClass);\n          }\n        } else {\n          parent.classList.remove(parentErrorClass);\n          error.remove();\n        }\n      }\n\n      function handleInput() {\n        // We can only update the error or hide it on input.\n        // Otherwise it will show when typing.\n        checkValidity({ insertError: false });\n\n        // also handle dirty tracking\n        setFormToDirty();\n      }\n\n      function handleInvalid(e) {\n        // prevent showing the default display\n        e.preventDefault();\n\n        // We can also create the error in invalid.\n        checkValidity({ insertError: true });\n      }\n\n      input.addEventListener(\"input\", handleInput);\n      input.addEventListener(\"invalid\", handleInvalid);\n    });\n\n    return () => {\n      inputs.forEach(input => {\n        input.removeEventListener('input', handleInput)\n        input.removeEventListener('invalid', handleInvalid)\n      })\n    }\n  }, []);\n\n  function Form({ onSubmit, children, ...rest }) {\n    return (\n      <form\n        {...rest}\n        onSubmit={event => {\n          event.preventDefault();\n          console.log(\"Submitting...\");\n          const formData = new FormData(event.target);\n          const fieldData = {};\n          for (const [key, value] of formData.entries()) {\n            fieldData[key] = value;\n          }\n          onSubmit && onSubmit({ event, formData, fieldData });\n        }}\n      >\n        {children}\n      </form>\n    );\n  }\n\n  return { Form, isDirty };\n}\n","import React from \"react\";\n\nimport Form from \"@uncontrolled/react\";\nimport \"./index.css\";\n\nconst App = props => {\n  function onSubmit({ fieldData }) {\n    const { firstName, lastName, email, phoneNumber } = fieldData;\n    alert(\n      `\n        Hello ${firstName} ${lastName}!\\r\\n\n        Since you signed up, we will email you at ${email} or call you at ${phoneNumber}.\\r\\n\n        Thanks!\n      `\n    );\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ formIsDirty }) => (\n        <>\n          <div className=\"field\">\n            <label>First Name</label>\n            <input type=\"text\" name=\"firstName\" required />\n          </div>\n          <div className=\"field\">\n            <label>Last Name</label>\n            <input type=\"text\" name=\"lastName\" required />\n          </div>\n          <div className=\"field\">\n            <label>Email Address</label>\n            <input type=\"email\" name=\"email\" required />\n          </div>\n          <div className=\"field\">\n            <label>Phone Number</label>\n            <input type=\"tel\" name=\"phoneNumber\" required pattern=\"\\d{10}\" />\n          </div>\n          <div>\n            <button type=\"submit\">Sign Me Up!</button>\n            {formIsDirty && (\n              <span\n                style={{ marginLeft: \"15px\", color: \"red\", fontWeight: 900 }}\n              >\n                The form is dirty\n              </span>\n            )}\n          </div>\n        </>\n      )}\n    </Form>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}